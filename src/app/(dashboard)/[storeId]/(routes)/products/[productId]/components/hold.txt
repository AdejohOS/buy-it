  const {mutate: updateRecord, isLoading} = useMutation({
    mutationFn: async ({name, images, price, categoryId, colorId, sizeId, isArchived, isFeatured}: ProductRequest) => {
      const payload: ProductRequest = {name, images, price, categoryId, colorId, sizeId, isArchived, isFeatured}
       
      if (initialData) {
        await axios.patch(`/api/${params.storeId}/products/${params.productId}`, payload)
      } else {

        await axios.post(`/api/${params.storeId}/products`, payload)
      }

      router.refresh()
      router.push(`/${params.storeId}/products`)
    },

    onSuccess: () => {
      toast({description: (toastMessage) })
    },

    onError: (err) => {
      if (err instanceof AxiosError) {
        if (err.response?.status === 401) {
          return toast({
            description: 'Unauthenticated user',
            variant: 'destructive',
        })
        }
      }

      toast({
        title: 'There was an error.',
        description: 'Could not update store',
        variant: 'destructive'
    })
    }
  })